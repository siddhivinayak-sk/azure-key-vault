#Define below property as custom bean configured for Jasypt
jasypt.encryptor.bean=encryptorBean

#Jasypt Encryption configuration; In case of online=false, provide jasypt key from boot application argument e.g. secretCode=myapp123
encryption.get-key-online=true
encryption.algorithm=PBEWithMD5AndDES
encryption.key-obtention-iterations=1000
encryption.pool-size=1
encryption.provider-name=SunJCE
encryption.salt-generator-class-name=org.jasypt.salt.RandomSaltGenerator
encryption.string-output-type=base64

#KeyVault Connection Configuration
#this property is fixed for Azure Vault as azure has common login url
azure-keyvault.azure-login-uri=https://login.microsoftonline.com/
#this property is fixed for Azure Vault as azure vault has common scope url
azure-keyvault.scope=https://vault.azure.net
#Obtain keyvault URL from azure portal vault page
azure-keyvault.resource-uri=
#Obtain tenantId/directoryID from azure kayvault page
azure-keyvault.tenant-id=
#AzureKeyVault client id configured into access policy of Azure KeyVault 
azure-keyvault.client-id=
#AzureKeyVault client key configured into access policy of Azure KeyVault
azure-keyvault.client-key
#Name of secret stored into azure vault
azure-keyvault.secret-name=secretCode
#Default value of secret property stored into vault. Default will be used in case of any exception
azure-keyvault.secret-default-value=myapp123

#Database configuration (where password has been encrypted and key stored into KeyVault's secret) - use EncryptionDecryptionUtils.java to encrypt values
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=sample
spring.datasource.username=sa
#spring.datasource.password=p@ssw0rd
spring.datasource.password=ENC(KZ6be0jCfWIVMBcXfGTjyy1B3ma1odlP)
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
